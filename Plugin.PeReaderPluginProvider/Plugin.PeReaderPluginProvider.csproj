<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<OutputType>Library</OutputType>
		<RootNamespace>Plugin.PeReaderPluginProvider</RootNamespace>
		<Configuration>Debug</Configuration>
		<Deterministic>false</Deterministic>
		<GenerateAssemblyInfo>False</GenerateAssemblyInfo>
		<GeneratePackageOnBuild>False</GeneratePackageOnBuild>
		<GenerateDocumentationFile>False</GenerateDocumentationFile>
		<CopyLocalLockFileAssemblies>True</CopyLocalLockFileAssemblies>
	</PropertyGroup>
	
	<!--nuspec-->
	<PropertyGroup>
		<PackageId>AlphaOmega.SAL.Plugin.PeReaderPluginProvider</PackageId>
		<Version>$(Version)</Version>
		<Title>Plugin provider based on PEReader package</Title>
		<Description>Plugin loader assemblty with PE reader file check before loading in the current process</Description>
		<Authors>Danila Korablin</Authors>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageReadmeFile>docs\README.md</PackageReadmeFile>
		<PackageIcon>docs\SAL.100.png</PackageIcon>
		<RepositoryUrl>https://github.com/DKorablin/Plugin.PeReaderPluginProvider</RepositoryUrl>
		<PackageTags>pe-reader plugin-loader assembly-loader plugin sal</PackageTags>
	</PropertyGroup>

	<ItemGroup>
		<None Include="..\README.md" Pack="true" PackagePath="\docs" />
		<None Include="..\Images.Shared\SAL.100.png" Pack="true" PackagePath="\docs" />
	</ItemGroup>
	
	<ItemGroup>
		<Compile Include="..\PluginProviders.Shared\FilePluginArgs.cs" Link="FilePluginArgs.cs" />
	</ItemGroup>
	
	<ItemGroup>
		<PackageReference Include="AlphaOmega.PEReader">
			<IncludeAssets>all</IncludeAssets>
		</PackageReference>
		<PackageReference Include="SAL.Flatbed">
			<ExcludeAssets>runtime</ExcludeAssets>
		</PackageReference>
		<PackageReference Include="System.Configuration.ConfigurationManager">
			<Private>true</Private>
			<ExcludeAssets>runtime;native</ExcludeAssets>
		</PackageReference>
	</ItemGroup>

	<!-- Exclude assemblies from copy local based on ExcludeAssembliesFromOutput patterns -->
	<Target Name="ExcludeSystemAssemblies" AfterTargets="ResolveReferences">
		<ItemGroup>
			<ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" Condition="$([System.String]::Copy('%(Filename)').StartsWith('System.'))" />
			<ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" Condition="$([System.String]::Copy('%(Filename)').StartsWith('Microsoft.Win32.'))" />
		</ItemGroup>
	</Target>
</Project>